import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as s,o as n}from"./app-DmbUaq1Y.js";const t={};function l(r,i){return n(),a("div",null,i[0]||(i[0]=[s(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><div class="hint-container info"><p class="hint-container-title">说明</p><p>本项目整处在快速迭代和不断完善丰富的阶段，加之新技术新组件也会不断被融入本系统，因此每个版本的发布，多少都会产生一些差异性变化。如果是全新安装部署，并不会产生任何影响；如果是已经在用的系统，就需要特别注意这些变化的细节。</p><p>虽然每次发布的 Release Note 都会说明本次更新的变化，但是比较零散也不容易引起关注，因此特别开辟本版块，用户汇总和说明版本更新的差异，以便使用者可以在原有系统基础之上快速升级为新的版本。</p><blockquote><p>本版块内容会尽可能详细阐述每次版本升级需要特别注意的事项以及需要更改的内容，无法确保升级无误，特别是如果你本地已经对代码进行了修改和新增的情况。</p></blockquote></div><div class="hint-container tip"><p class="hint-container-title">提示</p><blockquote><p>所有的代码更新都要注意代码的合并，特别是本地工程已经进行了较多代码修改的情况。(Git 的基本操作就不再赘述)</p></blockquote><p>代码升级的通用操作：</p><ol><li>Dante Engine 依赖包：每次发布新版本，Dante Engine 所有包都会上传至 Maven 中央仓库，因为发布和同步存在时间差，可以稍微等待或者自己下载代码编译。</li><li>Dante Cloud 主工程： <ul><li>代码更新完成之后，要重新编译之后再进行部署。如果是在 IDEA 中编译，在编译之前多点击几次 IDEA 右上角 Maven 面板中的刷新按钮，以保证新的依赖包可以完全载入。</li><li>涉及需要手动变更数据库的操作，修改完数据库之后，一定注意要清理 Redis 缓存。(缓存是把双刃剑啊)</li></ul></li><li>Dante Cloud Athena 单体版：与 Dante Cloud 主工程的操作方式相同。注意要更新并重新编译完 Dante Cloud 主工程后，再编译单体版新代码才能生效。</li><li>Dante Cloud UI：因每次版本发布前，都会对前端工程依赖包进行升级，以保证发布的代码都是全新可运行的。所以更新完代码要 <code>yarn install</code> 升级一下依赖包后再使用。</li></ol></div><div class="hint-container caution"><p class="hint-container-title">警告</p><ol><li>当你更新代码后，发现版本号有变化，需要重新编译工程代码，进行重新部署后再使用。</li><li>因系统使用的多级缓存，如果手动改动过数据，一定要注意清理缓存。需要先停止服务、清理 Redis、再重新启动服务。</li></ol></div><h2 id="v3-2-0-0" tabindex="-1"><a class="header-anchor" href="#v3-2-0-0"><span>v3.2.0.0</span></a></h2><p>本次更新主要是对 Spring Boot 3.2.0 和 Spring Cloud 2023.0.0 版本做了适配。但是相关的 Spring Cloud Tencent 和 Spring Cloud Alibaba 还没有对最新的版本进行适配，所以当前版本还存在以下问题</p><ol><li>Spring Cloud Tencent</li></ol><p>适配 Spring Boot 3.2 后，在使用 Spring Cloud Tencent 时，目前发现两个问题：</p><ul><li>Netty 最新的 4.1.101.Final 版本调用了一个 Grpc 组件不支持的方法，会导致 Spring Cloud Tencent 无法连接到Server，运行时出错。这个问题本身并不是“适配” 问题，而是 Spring Boot 2.7.18、3.1.6 和 3.2.0 都依赖了最新版本的 Netty，升级就会出错。</li><li>因为 Spring Bean 和 Feign 代码存在变化，而 Spring Cloud Tencent 采用 uber.jar 打包方式，导致依赖当前版本会出现代码冲突。</li></ul><p>解决办法：</p><ul><li>将 Netty 版本降至 4.1.100.Final，可解决无法 GRPC 无法连接Server 问题。</li><li>去除对包 <code>spring-cloud-starter-tencent-all</code> 和 <code>spring-cloud-starter-tencent-polaris-circuitbreaker</code> 的依赖，即可运行但部分功能会不可用</li></ul><blockquote><p>相关问题已经提交至 Spring Cloud Tencent 社区。<a href="https://github.com/Tencent/spring-cloud-tencent/issues/1210" target="_blank" rel="noopener noreferrer">https://github.com/Tencent/spring-cloud-tencent/issues/1210</a>。该问题已经修复，grpc-java也已经发布新版本。需要等待 Spring Cloud Tencent 新版本发布</p></blockquote><ol start="2"><li>Spring Cloud Alibaba</li></ol><p>因为 Feign 底层核心接口存在变化，所以原来可以使用的 Sentinel 全局 Fallback 代码无法使用。而且当前环境，依赖 Sentinel 相关组件，会出现自定义 Feign Contract 配置失效，导致使用 SpringMVC 注解的或者自定义注解的 Feign 代码抛错。</p><p>目前的临时解决办法就是去除 Sentinel 所有的依赖包。</p><h3 id="额外说明" tabindex="-1"><a class="header-anchor" href="#额外说明"><span>额外说明</span></a></h3><ol><li>Dante Cloud 3.2.0.0 虽然已经适配 Spring Boot 3.2 和 Spring Cloud 2023.0.0，但是因为部分功能并不可用（目前主要涉及流控、断容的内容都无法使用，涉及 Sentinel 和 Polaris Circuitbreaker），所以不建议用于生产。</li><li><strong>虽说是“适配”，但是核心目的是对升级 Spring Boot 3.2 和 Spring Cloud 2023.0.0 的工作量和会遇到的问题做评估，有了合理的评估才好决定是否要升级。所以望理解</strong></li><li>虽然前面的内容说的都是“问题”，但这并不是说组件本身有问题，而是放到当前 Dante Cloud 的环境中以及使用未进行版本适配遇到的小插曲，而且和具体自己代码的实现思路和逻辑有很大关系，不同的系统代码遇到问题也未必相同。</li></ol><p>还是建议等相关组件完成代码适配后再进行尝试。Spring Cloud Tencent 社区已经在进行响应，等 1.13 版本发布后就会开展 Spring Cloud 2023.0.0 版本的适配工作。<a href="https://github.com/Tencent/spring-cloud-tencent/issues/1209" target="_blank" rel="noopener noreferrer">https://github.com/Tencent/spring-cloud-tencent/issues/1209</a></p><h2 id="v3-1-3-6" tabindex="-1"><a class="header-anchor" href="#v3-1-3-6"><span>v3.1.3.6</span></a></h2><p>本次更新主要涉及配置中心配置的更新，这会直接影响 WebSocket 多实例发送消息是否生效。</p><ol><li>如果您现有工程没有修改过<code>dante-cloud-kafka.yaml</code> 中的内容，直接进行该配置文件内容的替换；如果现有工程对 <code>dante-cloud-kafka.yaml</code> 配置有过修改，请查看历史差异对比，针对性的小范围修改。</li><li>如果要开启 WebSocket 多实例支持，需要在 <code>dante-cloud-message.yaml</code> 配置中，开启以下配置</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">herodotus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    websocket</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">multiple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>如果不想使用多实例支持，一定要将该配置删除，或者将其值设置为 <code>single</code></p></div><h2 id="v3-1-3-3" tabindex="-1"><a class="header-anchor" href="#v3-1-3-3"><span>v3.1.3.3</span></a></h2><ul><li>本次更新涉及配置中心配置的变更，系统升级注意配置文件的变更</li><li>整合 Session 一致性方案，请参阅<a href="https://www.foxitsoftware.cn/bhds/payRead/pmq4wy" target="_blank" rel="noopener noreferrer">《Spring Cloud 之 Session 共享及一致性处理》</a>。具体详情，访问官网<a href="https://www.herodotus.cn/cookbook/" target="_blank" rel="noopener noreferrer"><strong>Cookbook</strong></a>。</li></ul><h2 id="v3-1-3-0" tabindex="-1"><a class="header-anchor" href="#v3-1-3-0"><span>v3.1.3.0</span></a></h2><h3 id="nacos-配置文件" tabindex="-1"><a class="header-anchor" href="#nacos-配置文件"><span>Nacos 配置文件</span></a></h3><p>为解决在微服务环境下，OSS 大文件分片上传错误，修改了 <code>dante-cloud-oss-ability.yaml</code> 配置信息。请对比文件变化手动更新该配置文件。</p><h3 id="数据库初始化脚本" tabindex="-1"><a class="header-anchor" href="#数据库初始化脚本"><span>数据库初始化脚本</span></a></h3><p>为了保证数据一致性，数据库初始化脚本移动至 dante-cloud-oss-ability 服务中。</p><h2 id="v3-1-2-4" tabindex="-1"><a class="header-anchor" href="#v3-1-2-4"><span>v3.1.2.4</span></a></h2><p>本次更新主要涉及 Nacos 配置的更新。</p><ol><li>数据库名称和 Redis 库变化，此变化不影响现有系统可以不用更新。</li><li>OSS 对象存储配置变更，此内容必须更新否则会影响对象存储的使用。请对比 <code>dante-cloud-oss-ability.yaml</code> 中变化内容进行更新。</li><li>补充可外部化配置的 logback.xml 日志配置文件。包含 Skywalking 日志上报、ELK 日志中心日志收集、Skywalking TraceId 等支持。同时提供常规及 MDC 两种配置。按需添加即可</li></ol><h2 id="v3-1-1-3" tabindex="-1"><a class="header-anchor" href="#v3-1-1-3"><span>v3.1.1.3</span></a></h2><ul><li>数据库变化</li></ul><p>本次更新涉及数据库核心数据的变更。主要涉及 oauth2_application 和 oauth2_registered_client 两张表。新增条目有点多，请查看代码变更历史。</p><ul><li>配置中心配置变更</li></ul><ol><li>新增了 5 个在 Service 分组下的配置。</li><li>dante-cloud-platform.yaml 中 resource server 相关内容需要删除</li></ol><h2 id="v3-1-0-0" tabindex="-1"><a class="header-anchor" href="#v3-1-0-0"><span>v3.1.0.0</span></a></h2><ul><li>本次更新存在配置参数变化，所以在原有版本上升级需要注意按照新版本设置修改 Nacos 配置。</li><li>本次更新存在数据库字段变化，其它变化可以自动更新，仅 oauth2_application 表中内容需要进行一定修改。 <ul><li>authorization_code_ttl 字段变更为 authorization_code_validity，新字段会自动生成注意手动迁移数据</li><li>device_code_time_to_live 字段变更为 device_code_validity，新字段会自动生成注意手动迁移数据</li></ul></li></ul><h2 id="v3-0-5-5" tabindex="-1"><a class="header-anchor" href="#v3-0-5-5"><span>v3.0.5.5</span></a></h2><ul><li>因仓库提交文件大小限制，所以本次发布不在上传 Skywalking Agent 相关 Jar 包，有需要请自行下载。</li><li>Camunda 7.19.0 尚未适配 Spring Boot 3，还无法正常使用，当前仅做依赖升级，</li></ul><h2 id="v3-0-4-1" tabindex="-1"><a class="header-anchor" href="#v3-0-4-1"><span>v3.0.4.1</span></a></h2><p>本次更新存在“破坏”性升级，如在已有版本基础上升级，强烈建议先备份数据库。</p><ol><li>升级存在数据库变更，对已有业务数据不会产生影响。</li><li>全新搭建不受影响。</li><li>已有系统建议重新建库后，手动对比合并有数据。</li></ol><h2 id="v3-0-0-0" tabindex="-1"><a class="header-anchor" href="#v3-0-0-0"><span>v3.0.0.0</span></a></h2><p>因 Spring Boot 3.0 自身的变化，特别是部分配置参数的变化，升级 Dante Cloud 3.0.0.0 除代码本身的变化之外，还需要对配置文件进行修改。使用 Dante Cloud 2.X 原有配置服务将无法正常运行。</p><p>如果是全新部署 Dante Cloud，直接导入 Nacos 配置包即可。如果是从 Dante Cloud 2.X 进行升级，需要手动修改已有的 Nacos 配置。</p><p>主要修改内容如下：</p><ul><li>dante-cloud-redis.yaml：Redis 相关配置全部移动到 data 属性节点下。(例如：spring.redis.database 变更为 spring.data.redis.database)</li><li>dante-cloud-database.yaml <ul><li>spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults 值修改为 true</li><li>spring.jpa.properties.hibernate.cache.region.factory_class 值修改为 cn.herodotus.engine.data.jpa.hibernate.spi.cache.HerodotusRegionFactory。（注意：...cache.spi... 修改为 ...spi.cache...）</li></ul></li><li>dante-cloud-database-postgresql.yaml: org.hibernate.dialect.PostgreSQL10Dialect 变更为 org.hibernate.dialect.PostgreSQLDialect</li></ul><h2 id="v2-7-5-3" tabindex="-1"><a class="header-anchor" href="#v2-7-5-3"><span>v2.7.5.3</span></a></h2><p>Spring Authorization Server 0.4.0 版本对一些基础类进行了包调整，同时增加了 Token 设置的参数。因 Token 相关参数均是以 JSON 形式(包含 Class 映射信息)存储在数据表中，所以升级使用该版本，需要对相关信息进行修改，否则将会出现 Token 解析、创建异常导致功能无法正常使用的问题。</p><p>本次更新需要对数据表<code>oauth2_registered_client</code> 中的 <code>token_settings</code> 字段值进行修改。</p><h3 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一"><span>方式一</span></a></h3><ol><li>清空 <code>oauth2_registered_client</code> 表中的数据</li><li>找到 <code>uaa-data-postgresql.sql</code> 或 <code>uaa-data-mysql.sql</code> 数据初始化脚本</li><li>将 <code>oauth2_registered_client</code> 相关的数据重新导入至数据库中</li></ol><h3 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二"><span>方式二</span></a></h3><p>该种方式是针对性的、小范围修改，请在熟练掌握数据库数据维护情况下采用</p><p>找到数据表<code>oauth2_registered_client</code> 中的 <code>token_settings</code> 字段，对该字段中的 JSON 数据，进行以下两点修改：</p><ol><li>将 JSON 数据中的 <code>org.springframework.security.oauth2.core.OAuth2TokenFormat</code> 修改为 <code>org.springframework.security.oauth2.server.authorization.settings.OAuth2TokenFormat</code></li><li>在 JSON 数据的末尾、<code>}</code> 之前，增加 <code>,&quot;settings.token.authorization-code-time-to-live&quot;:[&quot;java.time.Duration&quot;,300.000000000]</code>。注意不要漏掉前面的 <code>，</code> 逗号，以保证 JSON 格式的正确性。</li></ol><h2 id="v2-7-4-3" tabindex="-1"><a class="header-anchor" href="#v2-7-4-3"><span>v2.7.4.3</span></a></h2><p>增加 Opaque Token 支持，并将 Opaque Token 作为默认的 Token 格式，以规避原有 JWT Token 可以被解析的问题，同时解决在 JWT Token 模式下，Kick Out 不生效问题，以进一步提升系统的安全性。</p><ul><li>修改 dante-cloud-platform.yaml 配置，增加 Opaque Token 配置</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  security</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    oauth2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      resourceserver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        ......</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        opaquetoken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          client-id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">14a9cf797931430896ad13a6b1855611</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          client-secret</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">a05fe1fc50ed42a4990c6c6fc4bec398</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改数据表 oauth2_registered_client 中的数据</li></ul><p>找到该表中 token_settings 字段 JSON 数据，将其中 OAuth2TokenFormat 的值 “self-contained” 修改为 “reference”。</p><ul><li>修改数据表 oauth2_application 中的数据</li></ul><p>找到该表中 access_token_format 字段的值，将其值从“0”改“1”</p><blockquote><p>修改完成之后，需要停止服务，清理 Redis 缓存，然后重启服务生效。</p></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果想维持原状，仍旧使用 JWT Token 模式，那么无须进行以上操作。在 dante-cloud-platform.yaml 配置中，增加以下配置即可</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">herodotus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  security</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    validate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="v2-7-4-4" tabindex="-1"><a class="header-anchor" href="#v2-7-4-4"><span>v2.7.4.4</span></a></h2><ol><li>修复 Session 共享不生效问题</li></ol><ul><li>修改 dante-cloud-platform.yaml 配置，增加 Session 共享配置</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  session</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    store-type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">redis</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  security</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    oauth2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    ......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果不需要使用 Session 共享功能，可以忽略该操作。</p></div><ol start="2"><li>前端增加授权码模式登录</li></ol><p>前端使用授权码模式登录，需要修改前端当前使用 client_id 对应的 redirect_uris 信息，以保证回调地址的正确性</p><ul><li>找到数据表 <code>oauth2_registered_client</code> 和 <code>oauth2_application</code>，将其中与当前前端 client_id 对应的 redirect_uris 字段中的信息修改为：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 具体的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> IP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 地址和端口，根据自己的实际修改</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://192.168.101.10:3000/authorization-code</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><ol><li>redirect_uris 地址中，不支持 <code>localhost</code>，如果配置成 <a href="http://localhost:3000/authorization-code%EF%BC%8CSpring" target="_blank" rel="noopener noreferrer">http://localhost:3000/authorization-code，Spring</a> Authorization Server 将会抛出错误。可以配置成 <code>127.0.0.1</code>、任意 IP 或者域名。</li><li>因 redirect_uris 地址不支持 <code>localhost</code>，因此访问前端页面时也不能使用 <code>localhost</code> 访问。因为使用 localhost 访问前端，回调地址是 IP 地址，会导致前端存储的数据出错(浏览器存储数据，<a href="http://localhost:3000" target="_blank" rel="noopener noreferrer">http://localhost:3000</a> 和 <a href="http://xxx.xxx.xxx.xxx:3000" target="_blank" rel="noopener noreferrer">http://xxx.xxx.xxx.xxx:3000</a> 是不同的)。</li></ol></div><h2 id="v2-5-5-0-版本注意事项" tabindex="-1"><a class="header-anchor" href="#v2-5-5-0-版本注意事项"><span>v2.5.5.0 版本注意事项</span></a></h2><p>v2.5.5.0 版本以前，<strong>Dante Cloud</strong> 数据库初始化主要采用业务表自动创建和 OAuth2 部分表手工创建的方式。为了让数据库初始化工作更加便捷，v2.5.5.0 版本将原有需要手工创建的 OAuth2 数据表，全部改造为自动创建。</p><p>OAuth2 中，涉及数据库操作部分的代码，完全采用纯<code>JDBC</code>,使用原生 SQL 的方式实现。原生 SQL 的方式导致 SQL 语句中各个数据库字段的名称，一定要与实际数据库表字段对应，而且大小写敏感。OAuth2 所有业务表中，90%的字段都是使用小写字母定义，剩余的字段中会存在大小写混合的情况。而使用<code>Spring Data JPA</code>的自动建表机制，会统一使用小写字母进行建表，这样就会导致 OAuth2 部分业务失效。</p><h3 id="_1-一定要修改-nacos-配置后再运行服务" tabindex="-1"><a class="header-anchor" href="#_1-一定要修改-nacos-配置后再运行服务"><span>[1]一定要修改 Nacos 配置后再运行服务</span></a></h3><p>如果您现在使用的系统，主要是为了研究和学习，没有实际应用的数据。那么建议在工程 <code>\${project_home}/platform/dante-cloud-monitor/resources/imports</code> 目录下找到最新版本的 Nacos 配置，重新导入 Nacos 的配置，这样就不会出现上述问题。</p><p>如果已经在使用本系统，建议以最小化的方式修改 Nacos 配置后再使用系统。</p><p>在 Nacos 中，找到<code>dante-cloud-database.yaml</code>，修改配置<code>spring.jpa.hibernate.naming.physical-strategy</code>。</p><ul><li><strong>修改前</strong></li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  jpa</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    hibernate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      naming</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        physical-strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>修改后</strong></li></ul><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  jpa</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    hibernate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      naming</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        physical-strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cn.herodotus.dante.data.jpa.hibernate.HerodotusPhysicalNamingStrategy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,90)]))}const d=e(t,[["render",l]]),h=JSON.parse('{"path":"/guide/get-start/notices.html","title":"升级指南","lang":"zh-CN","frontmatter":{"icon":"caret-right","title":"升级指南","tag":["SAS","Spring Authorization Server","Dante Cloud","微服务","领域驱动","DDD","Spring Boot","Spring Cloud","Spring Security","Spring Cloud Alibaba","Spring Cloud Tencent","OAuth2.1","Nacos","Skywalking","Sentinel","Seata"],"description":"前言 说明 本项目整处在快速迭代和不断完善丰富的阶段，加之新技术新组件也会不断被融入本系统，因此每个版本的发布，多少都会产生一些差异性变化。如果是全新安装部署，并不会产生任何影响；如果是已经在用的系统，就需要特别注意这些变化的细节。 虽然每次发布的 Release Note 都会说明本次更新的变化，但是比较零散也不容易引起关注，因此特别开辟本版块，用户...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"升级指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-22T13:19:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"码匠君\\",\\"url\\":\\"https://gitee.com/dromara/dante-cloud\\"}]}"],["meta",{"property":"og:url","content":"https://dante-cloud.dromara.org/guide/get-start/notices.html"}],["meta",{"property":"og:site_name","content":"“一套代码、两种架构”基于Apache2.0开源协议的企业级微服务"}],["meta",{"property":"og:title","content":"升级指南"}],["meta",{"property":"og:description","content":"前言 说明 本项目整处在快速迭代和不断完善丰富的阶段，加之新技术新组件也会不断被融入本系统，因此每个版本的发布，多少都会产生一些差异性变化。如果是全新安装部署，并不会产生任何影响；如果是已经在用的系统，就需要特别注意这些变化的细节。 虽然每次发布的 Release Note 都会说明本次更新的变化，但是比较零散也不容易引起关注，因此特别开辟本版块，用户..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-22T13:19:39.000Z"}],["meta",{"property":"article:tag","content":"Seata"}],["meta",{"property":"article:tag","content":"Sentinel"}],["meta",{"property":"article:tag","content":"Skywalking"}],["meta",{"property":"article:tag","content":"Nacos"}],["meta",{"property":"article:tag","content":"OAuth2.1"}],["meta",{"property":"article:tag","content":"Spring Cloud Tencent"}],["meta",{"property":"article:tag","content":"Spring Cloud Alibaba"}],["meta",{"property":"article:tag","content":"Spring Security"}],["meta",{"property":"article:tag","content":"Spring Cloud"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:tag","content":"DDD"}],["meta",{"property":"article:tag","content":"领域驱动"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"Dante Cloud"}],["meta",{"property":"article:tag","content":"Spring Authorization Server"}],["meta",{"property":"article:tag","content":"SAS"}],["meta",{"property":"article:modified_time","content":"2025-06-22T13:19:39.000Z"}],["meta",{"name":"keywords","content":"SAS,Spring Authorization Server,Dante Cloud,微服务,DDD,Spring Boot,Spring Cloud,Spring Cloud Alibaba,Spring Cloud Tencent,Nacos,WebFlux,RSocket,GPRC,Minio"}],["script",{},"var _hmt = _hmt || [];\\n            (function() {\\n              var hm = document.createElement(\\"script\\");\\n              hm.src = \\"https://hm.baidu.com/hm.js?9d06530da5dbac9ce977a65ddf8e1cc0\\";\\n              var s = document.getElementsByTagName(\\"script\\")[0]; \\n              s.parentNode.insertBefore(hm, s);\\n            })();"]]},"git":{"createdTime":1750598379000,"updatedTime":1750598379000,"contributors":[{"name":"码匠君","username":"","email":"pointer_v@qq.com","commits":1}]},"readingTime":{"minutes":11.85,"words":3555},"filePathRelative":"guide/get-start/notices.md","autoDesc":true}');export{d as comp,h as data};
