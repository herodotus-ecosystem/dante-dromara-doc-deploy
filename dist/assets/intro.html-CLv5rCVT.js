import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as n}from"./app-_I46_jCL.js";const e="/assets/image/main/structure.jpg",l={};function h(r,i){return n(),a("div",null,i[0]||(i[0]=[t('<h2 id="简介-intro" tabindex="-1"><a class="header-anchor" href="#简介-intro"><span>简介 | Intro</span></a></h2><p>Dante OSS 是一款简化对象存储（OSS）操作的开源框架。借鉴 JPA 标准化设计思想，逐步提取和抽象各厂商 OSS 标准化操作，构建统一的 Java OSS API 规范。形成类似于 JPA 规范的、以 Java OSS API 为核心的、不同 OSS 厂商 SDK 为实现的对象存储使用模式，方便大家在不同厂商 OSS 之间切换而不需要修改代码。</p><h2 id="目标-goal" tabindex="-1"><a class="header-anchor" href="#目标-goal"><span>目标 | Goal</span></a></h2><ul><li>构建类似于 JPA 的 Java OSS API 规范，目标在不改变 API 的情况，通过切换厂商 OSS SDK 实现即可完成对象存储的切换。</li><li>不局限于常用的上传、下载，而是覆盖所有 OSS SDK 的共性操作。不仅可以方便的实现上传、下载，而且可以快速构建自己的 OSS 管理应用。</li><li>对共性操作提供统一的 Java API 和 REST API，对 OSS 厂商个性化操作视情况提供单独的 REST API 实现。</li></ul><h2 id="设计-design-thinking" tabindex="-1"><a class="header-anchor" href="#设计-design-thinking"><span>设计 | Design thinking</span></a></h2><p>Dante OSS 最初的设计目标，是深度封装 Minio Java SDK，可以更方便的实现复杂的 Minio 管理操作，同时提升使用 Minio 自定义开发的便捷度。随着版本的不断迭代，以及更多用户需求的收集，Dante OSS 的设计思想也在不断迭代。</p><p>随着 Amazon S3、阿里云等不同 OSS 厂商 SDK 的不断融入，发现虽然各 OSS 产品大多兼容 S3 标准，使用 Amazon S3 SDK 是可以完成其它厂商的 OSS 操作，但也仅限于常规的、基础的 OSS 操作，不能充分发挥个厂商 OSS 的特性。而且由于实现的不同，即使相同的 OSS 操作，传递的参数和返回值也不同，是的相同业务逻辑的代码，如果使用 A 厂商 SDK 实现，在 B 厂商 SDK 上是无法使用的，必须要重新实现一遍才能使用，这极大地的提高了迁移 OSS 的成本。</p><p>虽然，现在也有很多优秀的对象存储操作的封装框架，可以支持的 OSS 厂商 非常多，但是其中支持的操作没有那么丰富。Dante OSS 的目标除了满足 OSS 常规操作的使用以外，还行希望提供更丰富的、统一的 OSS 管理操作，用户可以更方便的在自己的应用中集成和开发更丰富、更新细致 OSS 管理功能。</p><p>因此，Dante OSS 在维持原有简化 Minio 管理操作目标的基础之上，借鉴 JPA 标准化设计思想，提取和抽象 OSS 标准化操作，形成统一的 Java OSS API 规范。同时封装可操作任意厂商的、统一的 REST API，形成定义统一、动态实现的应用模式（类似于 Hibernate 是 JPA 的一种实现，Hibernate 以 Dialect 方式支持不同的数据库一样），以方便不同 OSS 的切换和迁移。</p><figure><img src="'+e+`" alt="OSS_Structure" tabindex="0" loading="lazy"><figcaption>OSS_Structure</figcaption></figure><blockquote><p>目前以 Minio 作为 Java OSS API 规范的默认实现，当前仅提供 Minio 个性化操作 REST API 实现。</p></blockquote><h2 id="优点-advantages" tabindex="-1"><a class="header-anchor" href="#优点-advantages"><span>优点 | Advantages</span></a></h2><ul><li><strong>零额外学习成本</strong>: 开发者只要会 Spring 和 REST 基本开发，即可无缝集成和使用 Dante OSS</li><li><strong>降低开发者门槛</strong>: 屏蔽 Minio 等 Java OSS SDK 使用复杂度，使用 Spring 环境标准方式对原有 API 进行简化封装。Service API 和 REST API 开箱即用</li><li><strong>统一的开发接口</strong>: 构建统一的 Java OSS API 规范，形成统一的 Service API 和 REST API 接口，不需要修改代码即可切换不同厂商 OSS</li><li><strong>包含的功能丰富</strong>: 改造了 Minio Java SDK 的几乎全部功能，且对大文件分片上传、秒传、直传、断点续传等功能，均采用业内最优解决方案进行实现和融合</li><li><strong>规范优雅的代码</strong>: 所有函数参数，并未破坏原有 OSS SDK 代码构造器结构，而是在原有方式的基础上抽象简化，编程体验和代码可读性大幅提升</li><li><strong>完善的注释文档</strong>: 对请求参数、方法、REST API、Validation 提供详实的注释、说明和 OpenAPI 标注，用途用法一目了然，无需再翻阅 Minio 文档和源代码，帮助您节省更多时间</li><li><strong>丰富的稳定保障</strong>: 统一的、人性化的错误体系、内置的 REST API 防刷、幂等保护、详实准确的 Spring Validation 校验。</li><li><strong>完整的前端示例</strong>：前端采用一个完整的项目而非 Demo 的形式，全面的展示了前后端交互涉及、接口调用、参数使用、TS 类型定义等各方面内容，可直接用于实际项目或简单改造后构建自己的产品</li></ul><h2 id="结构-structure" tabindex="-1"><a class="header-anchor" href="#结构-structure"><span>结构 | Structure</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dante-oss</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-bom</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dante</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 顶级</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Maven</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 依赖，统一控制依赖及其版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-dialect</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 不同厂商</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 实现。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dialect-autoconfigure</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dialect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 自动配置模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dialect-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dialect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 通用代码模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dialect-sdk-aliyun</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Aliyun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SDK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 封装代码模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dialect-sdk-minio</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Minio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SDK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 封装代码模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dialect-sdk-s3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Amazon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SDK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 封装代码模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-rest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dante</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REST</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rest-sdk-minio</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Minio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 特有</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REST</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rest-sdk-specification</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 基于</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dante</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 规范实现的统一</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REST</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-solution</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 基于</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dante</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 规范的常规</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 应用方案实现模块</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-specification</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dante</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 规范定义</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-starter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dante</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 相关</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Starter</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-aliyun-spring-boot-starter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用于独立使用的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Aliyun</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SDK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 封装</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Starter。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-minio-spring-boot-starter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用于独立使用的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Minio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SDK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 封装</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Starter。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-s3-spring-boot-starter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用于独立使用的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Amazon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SDK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 封装</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Starter。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">└──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> oss-spring-boot-starter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dante</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OSS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 统一</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Starter</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="贡献-committer" tabindex="-1"><a class="header-anchor" href="#贡献-committer"><span>贡献 | Committer</span></a></h2><ol><li>在 Gitee fork 项目到自己的 repo</li><li>把 fork 过去的项目也就是你的项目 clone 到你的本地</li><li>修改代码（记得一定要修改 develop 分支）</li><li>commit 代码，push 到自己的库（develop 分支）</li><li>登录 Gitee 在你首页可以看到一个 pull request 按钮，点击它，填写一些说明信息，然后提交即可。</li><li>等待维护者合并</li></ol><h2 id="反馈-feedback" tabindex="-1"><a class="header-anchor" href="#反馈-feedback"><span>反馈 | Feedback</span></a></h2><ul><li>欢迎提交<a href="https://gitee.com/herodotus/dante-oss/issues" target="_blank" rel="noopener noreferrer">ISSUE</a> ，请写清楚问题的具体原因，重现步骤和环境</li></ul><h2 id="演示-example" tabindex="-1"><a class="header-anchor" href="#演示-example"><span>演示 | Example</span></a></h2><p>Dante OSS 作为 Dante Cloud 生态产品，不在单独提供演示环境和示例，请直接使用 Dante 环境查看效果和了解使用，这样也更贴近实际。</p><p>提供基于 Spring Authorization Server 的单体版、微服务版案例，从 SDK、Spring Boot Starter 到完整项目任你选择。前端采用一个基于 Vue3、Typescript5、Vite4、Pinia 2 的完整的前端项目作为集成示例，包括详细的 Typescript 类型定义以及 vue-simple-uploader 等主流组件集成和使用方法。</p><ul><li>微服务演示环境：<a href="https://gitee.com/dromara/dante-cloud" target="_blank" rel="noopener noreferrer">https://gitee.com/dromara/dante-cloud</a></li><li>单体架构演示环境：<a href="https://gitee.com/herodotus/dante-cloud-athena" target="_blank" rel="noopener noreferrer">https://gitee.com/herodotus/dante-cloud-athena</a></li><li>前端工程演示：<a href="https://gitee.com/herodotus/dante-cloud-ui" target="_blank" rel="noopener noreferrer">https://gitee.com/herodotus/dante-cloud-ui</a></li></ul><blockquote><p>注意：如果您仅是想了解基本的使用方式和使用效果，建议使用单体架构演示环境。具体搭建方式参见<a href="http://www.herodotus.cn" target="_blank" rel="noopener noreferrer">【在线文档】</a>中，单体版章节。</p></blockquote>`,24)]))}const d=s(l,[["render",h],["__file","intro.html.vue"]]),o=JSON.parse('{"path":"/ecosphere/oss/intro.html","title":"项目介绍","lang":"zh-CN","frontmatter":{"icon":"caret-right","title":"项目介绍","tag":["SAS","Spring Authorization Server","Dante Cloud","微服务","领域驱动","DDD","Spring Boot","Spring Cloud","Spring Security","Spring Cloud Alibaba","Spring Cloud Tencent","OAuth2.1","Nacos","Skywalking","Sentinel","Seata"],"description":"简介 | Intro Dante OSS 是一款简化对象存储（OSS）操作的开源框架。借鉴 JPA 标准化设计思想，逐步提取和抽象各厂商 OSS 标准化操作，构建统一的 Java OSS API 规范。形成类似于 JPA 规范的、以 Java OSS API 为核心的、不同 OSS 厂商 SDK 为实现的对象存储使用模式，方便大家在不同厂商 OSS 之...","head":[["meta",{"property":"og:url","content":"https://dante-cloud.dromara.org/ecosphere/oss/intro.html"}],["meta",{"property":"og:site_name","content":"“一套代码、两种架构”基于Apache2.0开源协议的企业级微服务"}],["meta",{"property":"og:title","content":"项目介绍"}],["meta",{"property":"og:description","content":"简介 | Intro Dante OSS 是一款简化对象存储（OSS）操作的开源框架。借鉴 JPA 标准化设计思想，逐步提取和抽象各厂商 OSS 标准化操作，构建统一的 Java OSS API 规范。形成类似于 JPA 规范的、以 Java OSS API 为核心的、不同 OSS 厂商 SDK 为实现的对象存储使用模式，方便大家在不同厂商 OSS 之..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://dante-cloud.dromara.org/assets/image/main/structure.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-05T17:33:07.000Z"}],["meta",{"property":"article:tag","content":"SAS"}],["meta",{"property":"article:tag","content":"Spring Authorization Server"}],["meta",{"property":"article:tag","content":"Dante Cloud"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"领域驱动"}],["meta",{"property":"article:tag","content":"DDD"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:tag","content":"Spring Cloud"}],["meta",{"property":"article:tag","content":"Spring Security"}],["meta",{"property":"article:tag","content":"Spring Cloud Alibaba"}],["meta",{"property":"article:tag","content":"Spring Cloud Tencent"}],["meta",{"property":"article:tag","content":"OAuth2.1"}],["meta",{"property":"article:tag","content":"Nacos"}],["meta",{"property":"article:tag","content":"Skywalking"}],["meta",{"property":"article:tag","content":"Sentinel"}],["meta",{"property":"article:tag","content":"Seata"}],["meta",{"property":"article:modified_time","content":"2025-02-05T17:33:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"项目介绍\\",\\"image\\":[\\"https://dante-cloud.dromara.org/assets/image/main/structure.jpg\\"],\\"dateModified\\":\\"2025-02-05T17:33:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"码匠君\\",\\"url\\":\\"https://gitee.com/dromara/dante-cloud\\"}]}"],["meta",{"name":"keywords","content":"SAS,Spring Authorization Server,Dante Cloud,微服务,DDD,Spring Boot,Spring Cloud,Spring Cloud Alibaba,Spring Cloud Tencent,Nacos,WebFlux,RSocket,GPRC,Minio"}],["script",{},"var _hmt = _hmt || [];\\n            (function() {\\n              var hm = document.createElement(\\"script\\");\\n              hm.src = \\"https://hm.baidu.com/hm.js?9d06530da5dbac9ce977a65ddf8e1cc0\\";\\n              var s = document.getElementsByTagName(\\"script\\")[0]; \\n              s.parentNode.insertBefore(hm, s);\\n            })();"]]},"headers":[{"level":2,"title":"简介 | Intro","slug":"简介-intro","link":"#简介-intro","children":[]},{"level":2,"title":"目标 | Goal","slug":"目标-goal","link":"#目标-goal","children":[]},{"level":2,"title":"设计 | Design thinking","slug":"设计-design-thinking","link":"#设计-design-thinking","children":[]},{"level":2,"title":"优点 | Advantages","slug":"优点-advantages","link":"#优点-advantages","children":[]},{"level":2,"title":"结构 | Structure","slug":"结构-structure","link":"#结构-structure","children":[]},{"level":2,"title":"贡献 | Committer","slug":"贡献-committer","link":"#贡献-committer","children":[]},{"level":2,"title":"反馈 | Feedback","slug":"反馈-feedback","link":"#反馈-feedback","children":[]},{"level":2,"title":"演示 | Example","slug":"演示-example","link":"#演示-example","children":[]}],"git":{"createdTime":1738776787000,"updatedTime":1738776787000,"contributors":[{"name":"码匠君","username":"码匠君","email":"pointer_v@qq.com","commits":1,"url":"https://github.com/码匠君"}]},"readingTime":{"minutes":6.12,"words":1836},"filePathRelative":"ecosphere/oss/intro.md","localizedDate":"2025年2月5日","autoDesc":true}');export{d as comp,o as data};
